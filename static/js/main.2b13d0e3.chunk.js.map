{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","name","placeholder","value","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","i","isComplete","key","onClick","TodoList","setTodos","test","newTodos","updatedTodo","filter","newText","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA6CeA,EA3CE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACJC,mBAAS,IADL,mBACvBC,EADuB,KAChBC,EADgB,KAGtBC,EAAUC,iBAAO,MAEvBC,qBAAU,WACNF,EAASG,QAAQC,WAmBvB,OACE,0BAAMC,UAAU,YAAYC,SAZT,SAACC,GACpBA,EAAEC,iBAEFZ,EAAQ,CACNa,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGRC,EAAS,MAKP,2BACEe,KAAK,OACLC,KAAK,OACLC,YAAY,cACZC,MAAOnB,EACPoB,SAtBe,SAACX,GACpBR,EAASQ,EAAEY,OAAOF,QAsBdG,IAAKpB,EACLK,UAAU,eAEZ,4BAAQS,KAAK,SAAST,UAAU,YAAhC,c,cCaSgB,EA7CF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,MAAMC,EAAwC,EAAxCA,aAAaC,EAA2B,EAA3BA,WAAWC,EAAgB,EAAhBA,WAAgB,EAElC5B,mBAAS,CAC5BY,GAAG,KACHI,KAAK,KAJgD,mBAElDa,EAFkD,KAE7CC,EAF6C,KAezD,OAAGD,EAAKjB,GACG,kBAAC,EAAD,CAAUiB,KAAMA,EAAM9B,QATd,SAACiB,GACZY,EAAWC,EAAKjB,GAAGI,GACnBc,EAAQ,CACJlB,GAAG,KACHI,KAAK,QASVS,EAAMM,KAAI,SAACC,EAAKC,GACf,OACI,yBACAzB,UAAWwB,EAAKE,WAAa,oBAAsB,WACnDC,IAAKF,GAED,yBAAME,IAAKH,EAAKpB,GAAIwB,QAAS,kBAAKV,EAAaM,EAAKpB,MAC/CoB,EAAKhB,MAEV,yBAAKR,UAAU,SACX,kBAAC,IAAD,CACC4B,QAAS,kBAAIT,EAAWK,EAAKpB,KAC9BJ,UAAU,gBAEV,kBAAC,IAAD,CACA4B,QAAS,kBAAIN,EAAQ,CAAClB,GAAGoB,EAAKpB,GAAGI,KAAK,MACtCR,UAAU,oBCenB6B,EArDE,WAAO,IAAD,EACKrC,mBAAS,IADd,mBACdyB,EADc,KACPa,EADO,KAuCrB,OACE,6BACE,2DACA,kBAAC,EAAD,CAAUvC,QAvCE,SAACiC,GACf,GAAKA,EAAKhB,OAAQ,QAAQuB,KAAKP,EAAKhB,MAApC,CAIA,IAAMwB,EAAQ,CAAIR,GAAJ,mBAAaP,IAE3Ba,EAASE,OAiCP,kBAAC,EAAD,CACEf,MAAOA,EACPC,aAhCe,SAACd,GACpB,IAAI6B,EAAchB,EAAMM,KAAI,SAACC,GAI3B,OAHIA,EAAKpB,KAAOA,IACdoB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETM,EAASG,IA0BLd,WAvBa,SAACf,GAClB,IAAI6B,EAAchB,EAAMiB,QAAO,SAACV,GAAD,OAASA,EAAKpB,KAAOA,KACpD0B,EAASG,IAsBLb,WAnBa,SAAChB,EAAG+B,GAChBA,IAAU,QAAQJ,KAAKI,IAI1BL,GAAS,SAAAM,GAAI,OAAEA,EAAKb,KAAI,SAAAC,GAAI,OAAKA,EAAKpB,KAAOA,EAAKoB,EAAKhB,KAAK2B,EAAUX,aCtB7Da,MAXf,WACE,OACE,yBAAKrC,UAAU,aAEf,yBAAKA,UAAU,YACb,kBAAC,EAAD,SCLNsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2b13d0e3.chunk.js","sourcesContent":["import React, { useState,useEffect,useRef } from \"react\";\r\n\r\nconst TodoForm = ({addTodo}) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n    const inputRef= useRef(null);\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    })\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addTodo({\r\n      id: Math.floor(Math.random() * 1000),\r\n      text: input,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"text\"\r\n        placeholder=\"Add a todo \"\r\n        value={input}\r\n        onChange={handleChange}\r\n        ref={inputRef}\r\n        className=\"todo-input\"\r\n      />\r\n      <button type=\"submit\" className=\"todo-btn\">\r\n        Add Todo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React,{useState} from 'react'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\nimport TodoForm from './TodoForm'\r\n\r\n\r\nconst Todo = ({todos,completeTodo,removeTodo,updateTodo}) => {\r\n\r\n    const [edit,setEdit] = useState({\r\n        id:null,\r\n        text:''\r\n    })\r\n\r\n    const submitUpdate=(text)=>{\r\n            updateTodo(edit.id,text)\r\n            setEdit({\r\n                id:null,\r\n                text:''\r\n            })\r\n    }\r\n\r\n    if(edit.id){\r\n        return <TodoForm edit={edit} addTodo={submitUpdate} />\r\n    }\r\n\r\n\r\n    return todos.map((todo,i)=>{\r\n            return(\r\n                <div \r\n                className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n                key={i}\r\n                >\r\n                    <div  key={todo.id} onClick={()=> completeTodo(todo.id)} >\r\n                        {todo.text}\r\n                    </div>\r\n                    <div className=\"icons\">\r\n                        <RiCloseCircleLine \r\n                         onClick={()=>removeTodo(todo.id)} \r\n                        className=\"delete-icon\"\r\n                        />\r\n                        <TiEdit \r\n                        onClick={()=>setEdit({id:todo.id,text:''})} \r\n                        className=\"edit-icon\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    \r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return ;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodo = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodo);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    let updatedTodo = todos.filter((todo)=> todo.id !== id)\r\n    setTodos(updatedTodo)\r\n  }\r\n\r\n  const updateTodo = (id,newText) => {\r\n    if (!newText|| /^\\s*$/.test(newText)) {\r\n        return ;\r\n      }\r\n  \r\n      setTodos(prev=>prev.map(todo =>( todo.id === id ? todo.text=newText : todo )))\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n      <h1>What's the Plane for Today?</h1>\r\n      <TodoForm addTodo={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}